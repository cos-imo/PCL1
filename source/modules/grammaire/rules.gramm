FICHIER -> with Ada.Text_IO ; procedure IDENT is DECLETOILE begin INSTR INSTRETOILE end IDENT_BIN ; eof
DECL -> type IDENT DECL2
DECL -> IDENT IDENTETOILE : TYPE EXPRINTER ;
DECL -> procedure IDENT PARAMS_INTER is DECLETOILE begin INSTR INSTRETOILE end IDENT_INTER ;
DECL -> function IDENT PARAMS_INTER return TYPE is DECLETOILE begin INSTR INSTRETOILE end IDENT_INTER ;
DECL2 -> is DECL3
DECL2 -> 
DECL3 -> record CHAMPS CHAMPSETOILE end record
DECL3 -> access IDENT
CHAMPS -> IDENT IDENTETOILE : TYPE
TYPE -> IDENT
TYPE -> access IDENT
PARAMS ->  ( PARAM ; PARAMETOILE )
PARAM -> IDENT IDENTETOILE : MODEINTER TYPE
MODE -> in MODE2
MODE2 -> out
MODE2 -> 
EXPR -> IDENT
EXPR -> CHARACTERE
EXPR -> true
EXPR -> false
EXPR -> null
EXPR -> ( EXPR EXPR2 )
EXPR -> IDENT EXPR3
EXPR -> not EXPR EXPR2
EXPR -> plus
EXPR -> new IDENT EXPR2
EXPR -> ident ( EXPRPLUS ) EXPR2
EXPR2 -> OPERATEUR EXPR EXPR2
EXPR2 -> . IDENT . 
EXPR3 -> ( EXPRPLUS )
EXPR3 -> 
INSTR -> EXPR INSTRIDENT
INSTRIDENT -> ; 
INSTRIDENT -> ( EXPR EXPRETOILE ) ; 
INSTRIDENT -> := EXPR ; 
INSTR -> return EXPR inter sc
INSTR -> begin INSTR INSTRETOILE end ; 
INSTR -> if EXPR then INSTR INSTRETOILE ELSIF_ETOILE ELSE_BIN end if
INSTR -> for IDENT in REVERSEINTER EXPR : EXPR loop INSTR INSTRETOILE end loop ; 
INSTR -> while EXPR loop INSTR INSTRETOILE end loop ; 
OPERATEUR -> = 
OPERATEUR -> / SLASHEGAL
OPERATEUR -> < COMPEGAL
OPERATEUR -> > COMPEGAL
OPERATEUR -> + 
OPERATEUR -> - 
OPERATEUR -> * 
OPERATEUR -> rem 
OPERATEUR -> and ANDTHEN
OPERATEUR -> or ORELSE
SLASHEGAL -> = 
SLASHEGAL -> 
COMPEGAL -> = 
COMPEGAL -> 
ANDTHEN -> 
ANDTHEN -> then
ORELSE -> else
ORELSE -> 
IDENTETOILE -> , IDENT IDENTETOILE
IDENTETOILE -> 
PARAMETOILE -> ; PARAM PARAMETOILE
PARAMETOILE -> 
DECLETOILE -> DECL DECLETOILE
DECLETOILE -> 
INSTRETOILE -> INSTR INSTRETOILE
INSTRETOILE -> 
CHAMPSETOILE -> CHAMPS CHAMPSETOILE
CHAMPSETOILE -> 
EXPRETOILE -> , EXPR EXPRETOILE
EXPRETOILE -> 
EXPRINTER -> := EXPR
EXPRINTER -> 
IDENT_INTER -> IDENT
IDENT_INTER -> . 
EXPRPLUS -> EXPR EXPRETOILE
MODEINTER -> MODE
MODEINTER -> 
REVERSEINTER -> reverse
REVERSEINTER -> 
ELSIF_ETOILE -> elsif EXPR then INSTR INSTRETOILE ELSIF_ETOILE
ELSIF_ETOILE -> 
ELSE_BIN -> ELSE INSTR INSTRETOILE
ELSE_BIN -> 
IDENT_BIN -> IDENT
IDENT_BIN -> 
PARAMS_INTER -> PARAMS
PARAMS_INTER -> 
IDENT -> id
ENTIER -> en
ELSE -> else